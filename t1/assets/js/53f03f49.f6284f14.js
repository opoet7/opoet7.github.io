"use strict";(self.webpackChunktaymaz_docs=self.webpackChunktaymaz_docs||[]).push([[2159],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>g});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var o=r.createContext({}),c=function(e){var t=r.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(o.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,o=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=c(n),m=a,g=d["".concat(o,".").concat(m)]||d[m]||u[m]||l;return n?r.createElement(g,i(i({ref:t},p),{},{components:n})):r.createElement(g,i({ref:t},p))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,i=new Array(l);i[0]=m;var s={};for(var o in t)hasOwnProperty.call(t,o)&&(s[o]=t[o]);s.originalType=e,s[d]="string"==typeof e?e:a,i[1]=s;for(var c=2;c<l;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},8639:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>i,default:()=>u,frontMatter:()=>l,metadata:()=>s,toc:()=>c});var r=n(7462),a=(n(7294),n(3905));const l={},i="Detecting Evasion",s={unversionedId:"BT/Detecting Evasion",id:"BT/Detecting Evasion",title:"Detecting Evasion",description:"\u06cc\u06a9\u06cc \u0627\u0632 \u062f\u0634\u0648\u0627\u0631\u062a\u0631\u06cc\u0646 \u0645\u0631\u0627\u062d\u0644 \u0628\u0631\u0627\u06cc \u062a\u06cc\u0645 \u0622\u0628\u06cc \u0634\u0646\u0627\u0633\u0627\u06cc\u06cc \u062a\u06a9\u0646\u06cc\u06a9 \u0647\u0627\u06cc\u06cc \u0645\u06cc \u0628\u0627\u0634\u062f \u06a9\u0647 \u0646\u0641\u0648\u0630\u06af\u0631 \u0628\u0627 \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u0627\u0632 \u0622\u0646 \u0627\u0632 \u0622\u0646\u062a\u06cc \u0648\u06cc\u0631\u0648\u0633 \u0648 \u06cc\u0627 EDR \u0639\u0628\u0648\u0631 \u06a9\u0631\u062f\u0647 \u0627\u0633\u062a \u062f\u0631 \u0627\u06cc\u0646 \u0645\u0631\u062d\u0644 \u0646\u0641\u0648\u0630 \u06af\u0631 \u0622\u0634\u0646\u0627\u06cc\u06cc \u06a9\u0627\u0645\u0644 \u0628\u0627 \u0645\u062d\u0635\u0648\u0644\u0627\u062a \u0627\u0645\u0646\u06cc\u062a\u06cc \u062f\u0627\u0631\u062f \u0648 \u0627\u0632 Signature \u0647\u0627 \u0648 Rule \u0647\u0627\u06cc \u0622\u0646 \u0647\u0627 \u0622\u06af\u0627\u0647\u06cc \u06a9\u0627\u0641\u06cc \u062f\u0627\u0631\u062f \u062f\u0631 \u0627\u06cc\u0646 \u0628\u062e\u0634 \u0642\u0635\u062f \u062f\u0627\u0631\u06cc\u0645 \u062a\u06a9\u0646\u06cc\u06a9 \u0647\u0627\u06cc\u06cc \u0631\u0627 \u06a9\u0647 \u06af\u0631\u0648\u0647 \u0647\u0627\u06cc\u06cc APT  \u062f\u0631 \u0633\u0627\u0644 \u0647\u0627\u06cc \u06af\u0630\u0634\u062a\u0647 \u0627\u0632 \u0622\u0646 \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u0646\u0645\u0648\u062f\u0647 \u0627\u0646\u062f \u0631\u0627 \u0628\u0631\u0631\u0633\u06cc \u06a9\u0646\u06cc\u0645",source:"@site/docs/BT/11- Detecting Evasion.md",sourceDirName:"BT",slug:"/BT/Detecting Evasion",permalink:"/docs/BT/Detecting Evasion",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/BT/11- Detecting Evasion.md",tags:[],version:"current",sidebarPosition:11,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Privilege Escalation Detection",permalink:"/docs/BT/Detecting PE"},next:{title:"Persistent",permalink:"/docs/BT/Detecting Persistent"}},o={},c=[{value:"Process Injection",id:"process-injection",level:2},{value:"Event ID 25: ProcessTampering (Process image change)",id:"event-id-25-processtampering-process-image-change",level:4},{value:"Scenario : Detecting Procss Herpaderping",id:"scenario--detecting-procss-herpaderping",level:4},{value:"DLL Injection With Signed Binary",id:"dll-injection-with-signed-binary",level:3},{value:"Detection",id:"detection",level:4},{value:"Powershell Process Injection",id:"powershell-process-injection",level:3},{value:"Load Signed DLL with Malicious File",id:"load-signed-dll-with-malicious-file",level:2},{value:"Dll for credential dumping",id:"dll-for-credential-dumping",level:3},{value:"Software Licensing Client",id:"software-licensing-client",level:2}],p={toc:c},d="wrapper";function u(e){let{components:t,...l}=e;return(0,a.kt)(d,(0,r.Z)({},p,l,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"detecting-evasion"},"Detecting Evasion"),(0,a.kt)("alert",{lang:"fa",type:"info",title:"\u0628\u0627\u06cc \u067e\u0633 \u0645\u06a9\u0627\u0646\u06cc\u0632\u0645 \u0647\u0627\u06cc \u0627\u0645\u0646\u06cc\u062a\u06cc"},"\u06cc\u06a9\u06cc \u0627\u0632 \u062f\u0634\u0648\u0627\u0631\u062a\u0631\u06cc\u0646 \u0645\u0631\u0627\u062d\u0644 \u0628\u0631\u0627\u06cc \u062a\u06cc\u0645 \u0622\u0628\u06cc \u0634\u0646\u0627\u0633\u0627\u06cc\u06cc \u062a\u06a9\u0646\u06cc\u06a9 \u0647\u0627\u06cc\u06cc \u0645\u06cc \u0628\u0627\u0634\u062f \u06a9\u0647 \u0646\u0641\u0648\u0630\u06af\u0631 \u0628\u0627 \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u0627\u0632 \u0622\u0646 \u0627\u0632 \u0622\u0646\u062a\u06cc \u0648\u06cc\u0631\u0648\u0633 \u0648 \u06cc\u0627 EDR \u0639\u0628\u0648\u0631 \u06a9\u0631\u062f\u0647 \u0627\u0633\u062a \u062f\u0631 \u0627\u06cc\u0646 \u0645\u0631\u062d\u0644 \u0646\u0641\u0648\u0630 \u06af\u0631 \u0622\u0634\u0646\u0627\u06cc\u06cc \u06a9\u0627\u0645\u0644 \u0628\u0627 \u0645\u062d\u0635\u0648\u0644\u0627\u062a \u0627\u0645\u0646\u06cc\u062a\u06cc \u062f\u0627\u0631\u062f \u0648 \u0627\u0632 Signature \u0647\u0627 \u0648 Rule \u0647\u0627\u06cc \u0622\u0646 \u0647\u0627 \u0622\u06af\u0627\u0647\u06cc \u06a9\u0627\u0641\u06cc \u062f\u0627\u0631\u062f \u062f\u0631 \u0627\u06cc\u0646 \u0628\u062e\u0634 \u0642\u0635\u062f \u062f\u0627\u0631\u06cc\u0645 \u062a\u06a9\u0646\u06cc\u06a9 \u0647\u0627\u06cc\u06cc \u0631\u0627 \u06a9\u0647 \u06af\u0631\u0648\u0647 \u0647\u0627\u06cc\u06cc APT  \u062f\u0631 \u0633\u0627\u0644 \u0647\u0627\u06cc \u06af\u0630\u0634\u062a\u0647 \u0627\u0632 \u0622\u0646 \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u0646\u0645\u0648\u062f\u0647 \u0627\u0646\u062f \u0631\u0627 \u0628\u0631\u0631\u0633\u06cc \u06a9\u0646\u06cc\u0645"),(0,a.kt)("h2",{id:"process-injection"},"Process Injection"),(0,a.kt)("p",null,"Process Injection is a versatile technique that adversaries leverage to perform a wide range of malicious activity. It\u2019s so versatile that ATT&CK includes 14 sub-techniques of Process Injection"),(0,a.kt)("h4",{id:"event-id-25-processtampering-process-image-change"},"Event ID 25: ProcessTampering (Process image change)"),(0,a.kt)("p",null,"tamering.xml"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-xml"},'<Sysmon schemaversion="4.50">\n  <EventFiltering>\n      <ProcessTampering onmatch="exclude">\n      </ProcessTampering>\n  </EventFiltering>\n</Sysmon>\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"sysmon -i tampering.xml\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'event.module : "sysmon"  and event.code :"25"\n')),(0,a.kt)("h4",{id:"scenario--detecting-procss-herpaderping"},"Scenario : Detecting Procss Herpaderping"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'event.module : "sysmon"  and event.code :"25"\n')),(0,a.kt)("p",null,(0,a.kt)("img",{src:n(1973).Z,width:"2530",height:"1282"})),(0,a.kt)("h3",{id:"dll-injection-with-signed-binary"},"DLL Injection With Signed Binary"),(0,a.kt)("p",null,"Adversaries may abuse mavinject.exe to proxy execution of malicious  code. Mavinject.exe is the Microsoft Application Virtualization  Injector, a Windows utility that can inject code into external processes  as part of Microsoft Application Virtualization"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-powershell"},"C:\\Windows\\system32\\mavinject.exe pid /INJECTRUNNING nss.dll\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-powershell"},"mavinject.exe ((Get-Process lsass).Id) /INJECTRUNNING C:\\Windows\\System32\\vbscript.dll\n")),(0,a.kt)("h4",{id:"detection"},"Detection"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"sysmon Event ID 10")," Tracks ProcessAccess or cross-process events, generating a log entry whenever one process opens another process.  Therefore, this event ID will likely generate a lot of noise without filtering out known benign cross-process behavior."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Event ID 4663:")," LSASS Access"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Sysmon Event ID 7")," The image loaded event logs when a module is loaded in a specific process"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-powershell"},'process where process.name == "powershell.exe"\nand\nhandle_granted_to != null \n')),(0,a.kt)("h3",{id:"powershell-process-injection"},"Powershell Process Injection"),(0,a.kt)("p",null,"Windows API Call "),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"VirtualAlloc / VirtualAllocEx / VirtualProtect ")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"OpenProcess ")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"WriteprocessMemory ")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"CreateRemoteThread")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"ResumeThread"))),(0,a.kt)("p",null,"Powershell Event ID  : 4104"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"PowerShell execution / display code execute in powershell .ps1")),(0,a.kt)("p",null,"KQL"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sql"},'powershell.file.script_block_text : ("OpenProcess" or "VirtualAllocEx" or "WriteProcessMemory" or "CreateRemoteThread")\n')),(0,a.kt)("p",null,"EQL "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sql"},"event.category:process and powershell.file.script_block_text : (\n(VirtualAlloc or VirtualAllocEx or VirtualProtect or  LoadLibraryA or \nor OpenProcess or OpenProcessToken or AdjustTokenPrivileges) and\n(WriteProcessMemory or CreateRemoteThread \nCreateThread or ResumeThread))\n")),(0,a.kt)("h2",{id:"load-signed-dll-with-malicious-file"},"Load Signed DLL with Malicious File"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"vaultcli.dll ")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-powershell"},'process where process.name !=  "VaultCmd.exe" and\n(file.name: "vaultcli.dll" or dll.name: "vaultcli.dll") \n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sql"},'process where process.name !=  "VaultCmd.exe" and\n(file.name: "vaultcli.dll" or dll.name: "vaultcli.dll") and process.name not in~ ("runtimebroker.exe", "svchost.exe", "video.UI.exe", "taskhostw.exe" , "hxtsr.exe","searchapp.exe" , "settingsynchost.exe")\n')),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"SAMlib.dll")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-powershell"},'process where process.name !=  "lsass.exe" and\n(file.name: SAMLib.DLL" or dll.name: "SAMLib.DLL") \n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'process where process.name !=  "lsass.exe" and\n(file.name: "SAMLib.DLL" or dll.name: "SAMLib.DLL")  and process.name not in~ ("net1.exe" , "svchost.exe" , "taskhostw.exe" , "logonui.exe", "winlogbeat.exe" , "packetbeat.exe" , "credentialUibroker.exe")\n')),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"taskschd.dll")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-powerquery"},'process where process.name in ("EXCEL.EXE" , "WINWORD.EXE" ,  "outlook") and\n file.name : "*taskschd.dll*"\n')),(0,a.kt)("h3",{id:"dll-for-credential-dumping"},"Dll for credential dumping"),(0,a.kt)("p",null,"cryptdll.dll, hid.dll, samlib.dll, vaultcli.dll, and winscard.dll"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-powershell"},'process where process.path == "c:\\windows\\system32\\"\nand\nfile_path != ("windows\\system32\\" , "windows\\winsxs")\n')),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/wietze/windows-dll-hijacking/blob/master/possible_windows_dll_hijacking.yml"},"windows-dll-hijacking/possible_windows_dll_hijacking.yml at master \xb7 wietze/windows-dll-hijacking \xb7 GitHub")),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/wietze/HijackLibs/tree/main/yml/microsoft/built-in"},"https://github.com/wietze/HijackLibs/tree/main/yml/microsoft/built-in")),(0,a.kt)("h2",{id:"software-licensing-client"},"Software Licensing Client"),(0,a.kt)("p",null,"Slc.dll file, also known as Software Licensing Client Dll, is commonly associated with Microsoft\xae Windows\xae Operating System. It is an essential component, which ensures that Windows programs operate properly."))}u.isMDXComponent=!0},1973:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/her-df29164b2a69a13afb5e384fdc503630.png"}}]);